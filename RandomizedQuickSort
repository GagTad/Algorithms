#include <iostream>
#include <vector>
#include <cstdlib> 
using namespace std;


int randomPartition(vector<int>& arr, int low, int high) {
    int randomIndex = low + rand() % (high - low + 1); 
    swap(arr[randomIndex], arr[high]);

    
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j < high; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(arr[i], arr[j]);
        }
    }

    swap(arr[i + 1], arr[high]);
    return i + 1; 
}


void randomizedQuickSort(vector<int>& arr, int low, int high) {
    if (low < high) {
        int pi = randomPartition(arr, low, high); 

        randomizedQuickSort(arr, low, pi - 1);
        randomizedQuickSort(arr, pi + 1, high);
    }
}


void printVector(const vector<int>& arr) {
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;
}

int main() {
    vector<int> arr = { 10, 7, 8, 9, 1, 5 };

    randomizedQuickSort(arr, 0, arr.size() - 1);

    cout << "Sorted with Randomized QuickSort : ";
    printVector(arr);

    return 0;
}
