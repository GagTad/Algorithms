#include <iostream>

struct Node {
    int data;
    Node* next;
    Node* prev;
};

class Deque {
private:
    Node* front;
    Node* rear;

public:
   
    Deque() {
        front = rear = nullptr;
    }

    
    void push_front(int val) {
        Node* newNode = new Node();
        newNode->data = val;
        newNode->prev = nullptr;
        newNode->next = front;

        if (front == nullptr) {
            rear = newNode;
        }
        else {
            front->prev = newNode;
        }
        front = newNode;
    }

   
    void push_back(int val) {
        Node* newNode = new Node();
        newNode->data = val;
        newNode->next = nullptr;
        newNode->prev = rear;

        if (rear == nullptr) {
            front = newNode;
        }
        else {
            rear->next = newNode;
        }
        rear = newNode;
    }

    
    void pop_front() {
        if (front == nullptr) {
            std::cout << "Deque is empty" << std::endl;;
            return;
        }

        Node* temp = front;
        front = front->next;

        if (front == nullptr) {
            rear = nullptr;
        }
        else {
            front->prev = nullptr;
        }

        delete temp;
    }

    
    void pop_back() {
        if (rear == nullptr) {
            std::cout << "Deque is empty " << std::endl;
            return;
        }

        Node* temp = rear;
        rear = rear->prev;

        if (rear == nullptr) {
            front = nullptr;
        }
        else {
            rear->next = nullptr;
        }

        delete temp;
    }

    
    int getFront() {
        if (front == nullptr) {
            std::cout << "Deque-ն դատարկ է!\n";
            return -1;
        }
        return front->data;
    }

    
    int getBack() {
        if (rear == nullptr) {
            std::cout << "Deque-ն դատարկ է!\n";
            return -1;
        }
        return rear->data;
    }

    
    bool isEmpty() {
        return front == nullptr;
    }

    
    void printDeque() {
        Node* temp = front;
        while (temp != nullptr) {
            std::cout << temp->data << " ";
            temp = temp->next;
        }
        std::cout << std::endl;
    }
};

int main() {
    Deque dq;

    dq.push_front(10);
    dq.push_back(20);
    dq.push_front(5);
    dq.push_back(25);

    std::cout << "Deque: ";
    dq.printDeque();

    std::cout << "first element : " << dq.getFront() << std::endl;
    std::cout << "last element: " << dq.getBack() << std::endl;

    dq.pop_front();
    std::cout << "after pop_front(): ";
    dq.printDeque();

    dq.pop_back();
    std::cout << "after pop_back(): ";
    dq.printDeque();

    return 0;
}
